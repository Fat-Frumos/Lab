{
	"info": {
		"_postman_id": "401e891c-86b9-4be2-b5d3-e7c02ba21bf3",
		"name": "tomcat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10796869"
	},
	"item": [
		{
			"name": "Update certificate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.not.be.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"Spring Gift Certificate\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/certificates/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"certificates",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find certificates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains required fields for certificates\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    for (var i = 0; i < jsonData.length; i++) {\r",
							"        pm.expect(jsonData[i]).to.have.property('id');\r",
							"        pm.expect(jsonData[i]).to.have.property('name');\r",
							"        pm.expect(jsonData[i]).to.have.property('description');\r",
							"        pm.expect(jsonData[i]).to.have.property('price');\r",
							"        pm.expect(jsonData[i]).to.have.property('createDate');\r",
							"        pm.expect(jsonData[i]).to.have.property('lastUpdateDate');\r",
							"        pm.expect(jsonData[i]).to.have.property('duration');\r",
							"        // pm.expect(jsonData[i]).to.have.property('tags');\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/certificates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"certificates"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find tags",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Certificate#1",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}